/* equal.asm * Returns true iff all arguments are equal: R0 <- TRUE iff ARG[0] = ARG[1] =... */ EQUAL:  PUSH(FP);  MOV(FP, SP);  PUSH(R1);  PUSH(R2);  PUSH(R3);  PUSH(R4);  PUSH(R5);    MOV(R5,FPARG(1));  CMP(R5, IMM(0));  JUMP_EQ(HAS_NO_ARGS_EQUAL);  CMP(R5, IMM(1));  JUMP_EQ(CREATE_TRUE_EQUAL);  CALL(MAKE_ARGS_FRACTIONS);  MOV(R0,INDD(FPARG(2),1));  MOV(R1,INDD(FPARG(2),2));  DECR(R5);  MOV(R2,IMM(3));    L_START_EQUAL:  CMP(R5, IMM(0));  JUMP_EQ(CREATE_TRUE_EQUAL);  MOV(R3,R0);  MOV(R4,R1);  MUL(R3,INDD(FPARG(R2),2));  MUL(R4,INDD(FPARG(R2),1));  CMP(R3, R4);  JUMP_NE(CREATE_FALSE_EQUAL);  INCR(R2);  DECR(R5);  JUMP(L_START_EQUAL);    HAS_NO_ARGS_EQUAL:  CALL(ERROR_NOT_ENOUGH_ARGS);    CREATE_TRUE_EQUAL:  MOV(R0,TRUE_CONSTANT);  POP(R5);  POP(R4);  POP(R3);  POP(R2);  POP(R1);  POP(FP);  RETURN;    CREATE_FALSE_EQUAL:  MOV(R0,FALSE_CONSTANT);  POP(R5);  POP(R4);  POP(R3);  POP(R2);  POP(R1);  POP(FP);  RETURN;