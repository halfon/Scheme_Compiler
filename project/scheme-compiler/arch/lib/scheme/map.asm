MAP:
//FPARG(1) = N
//FPARG(2) = CLOSURE

PUSH (FP);
MOV (FP,SP);
PUSH(R1);
PUSH(R2);
PUSH(R3);
PUSH(R4);
PUSH(R5);
PUSH(R6);
PUSH(R7);

MOV (R2,0); //R2 WILL HOLD THE AMOUND OF ELEMENTS IN EACH LIST;
MOV (R1,FPARG(1)); 
MOV(R6,R1);
DECR(R6);
INCR(R1); //NOW FPARG(R1) IS THE LAST LIST;

MAP_NEXT_RUN_OF_FUNC:
MOV (R3,R1);
CMP(FPARG(R3),NIL_CONSTANT);
JUMP_EQ (MAP_BUILD_RESULT_LIST);

MAP_PUSH_ELEMENT_OF_LIST:
CMP (R3,2);
JUMP_EQ (MAP_START_FUNCTION);
MOV (R4,FPARG(R3));
PUSH (INDD(R4,1)); // PUSH THE FIRST ELEMENT ON THE LIST
MOV (FPARG(R3),INDD(R4,2)); //UPDATE THE LIST TO BE THE CDR OF THE LIST
DECR(R3);
JUMP (MAP_PUSH_ELEMENT_OF_LIST);
MAP_START_FUNCTION:
PUSH(R6); // PUSH N FOR THE FUNC
PUSH(INDD(FPARG(2),1)); // PUSH ENV
CALLA (INDD(FPARG(2),2)); // CALL THE CLOSURE
DROP(1);
POP(R7);
DROP(R7);
PUSH(R0);
INCR(R2);
JUMP(MAP_NEXT_RUN_OF_FUNC);
MAP_BUILD_RESULT_LIST:
MOV (R0, NIL_CONSTANT);
MAP_BUILD_LOOP:
CMP(R2,0);
JUMP_EQ (FINISH_MAP);
POP(R5);
PUSH (R0);
PUSH(R5);
CALL(MAKE_SOB_PAIR);
DROP(2);
DECR(R2);
JUMP(MAP_BUILD_LOOP);
FINISH_MAP:
POP(R7);
POP(R6);
POP(R5);
POP(R4);
POP(R3);
POP(R2);
POP(R1);
MOV(SP,FP);
POP(FP);
RETURN;
